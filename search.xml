<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>如何搭建blog</title>
      <link href="/2025/02/03/%E7%AC%AC%E4%B8%80%E8%AF%BE-%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BAblog/"/>
      <url>/2025/02/03/%E7%AC%AC%E4%B8%80%E8%AF%BE-%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BAblog/</url>
      
        <content type="html"><![CDATA[<div class="video-container"></div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style><p>本文详细介绍了如何使用Hexo框架搭建一个个人博客，并将其部署到GitHub Pages和Cloudflare Pages上。主要内容包括</p><ul><li>环境准备：安装Node.js和Git</li><li>配置Git和GitHub：设置SSH密钥，创建GitHub仓库</li><li>初始化Hexo项目：安装Hexo，创建新博客</li><li>部署到GitHub Pages：配置部署设置，推送静态文件</li><li>部署到Cloudflare Pages：连接GitHub仓库，自动部署</li><li>基本使用方法：创建新文章，本地预览，发布更新</li></ul><p>这个教程适合那些想要快速搭建个人博客，但又不想花费太多成本的人。通过使用Hexo、GitHub和Cloudflare的免费服务，您可以轻松创建一个高效、简洁的博客网站。</p><h1 id="1-事前准备"><a href="#1-事前准备" class="headerlink" title="1.事前准备"></a>1.事前准备</h1><ul><li>域名（非必须，你也可以使用免费域名，或者GitHub.io或Pages.dev分配的域名也可以）</li><li>GitHub（必须，你需要注册一个GitHub帐号）</li><li>Cloudflare（非必须，你需要注册一个Cloudflare帐号，这样你就可以将博客部署在CF的CDN里加速，但是你也可以直接使用GitHub.io分配的域名）</li></ul><h1 id="2-软件支持"><a href="#2-软件支持" class="headerlink" title="2.软件支持"></a>2.软件支持</h1><ol><li>Node（必须）</li><li>Git（必须）</li><li>VSCode（非必须，这是一款轻量型的代码编辑器，可以帮助你养成一个很好的编程习惯）</li></ol><h2 id="2-1-安装-Node"><a href="#2-1-安装-Node" class="headerlink" title="2.1.安装 Node"></a>2.1.安装 Node</h2><ol><li>打开Node官网，下载和自己系统相配的Node的安装程序，否则会出现安装问题。下载地址：<a href="https://nodejs.org/en">https://nodejs.org/en</a></li><li>下载后安装，安装的目录可以使用默认目录C:&#x2F;Program Files&#x2F;nodejs&#x2F;</li><li>安装完成后，检查是否安装成功。在键盘按下win + R键，输入CMD，然后回车，打开CMD窗口，执行node -v命令，看到版本信息，则说明安装成功。<blockquote><p><img src="https://img.090227.xyz/file/5ca2f549a4489064d3444.jpg" alt="示例1"></p><p>mac系统：</p><p>![](<a href="https://blog.950320.us.kg/PicGo/.%E6%88%AA%E5%B1%8F2025-02-07">https://blog.950320.us.kg/PicGo/.截屏2025-02-07</a> 22.10.09.png)</p></blockquote></li><li>修改npm源。npm下载各种模块，默认是从国处服务器下载，速度较慢，建议配置成华为云镜像源。打开CMD窗口，运行如下命令:</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://mirrors.huaweicloud.com/repository/npm/ </span><br></pre></td></tr></table></figure><h2 id="2-2-安装-Git"><a href="#2-2-安装-Git" class="headerlink" title="2.2.安装 Git"></a>2.2.安装 Git</h2><ol><li>进入官网下载适合你当前系统的 Git：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a><blockquote><p><img src="https://img.090227.xyz/file/14b9fdf14c49320e531fb.jpg" alt="示例2"></p></blockquote></li><li>下载后傻瓜式安装Git即可，安装的目录最好使用默认目录<strong>C:&#x2F;Program Files&#x2F;Git</strong></li><li>点击电脑左下角开始即可看见<strong>Git CMD、Git Bash、Git GUI</strong>。</li></ol><ul><li><strong>Git CMD</strong> 是windows 命令行的指令风格</li><li><strong>Git Bash</strong> 是linux系统的指令风格（建议使用）</li><li><strong>Git GUI</strong>是图形化界面（新手学习不建议使用）</li></ul><h2 id="4-mac系统下安装"><a href="#4-mac系统下安装" class="headerlink" title="4.mac系统下安装"></a>4.mac系统下安装</h2><p>![](<a href="https://blog.950320.us.kg/PicGo/.%E6%88%AA%E5%B1%8F2025-02-07">https://blog.950320.us.kg/PicGo/.截屏2025-02-07</a> 22.15.16.png)</p><p>使用<strong>终端</strong>直接安装即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install git #root用户</span><br><span class="line">sudo  brew install git #普通用户</span><br></pre></td></tr></table></figure><h1 id="3-配置-Git-密钥并连接至-Github"><a href="#3-配置-Git-密钥并连接至-Github" class="headerlink" title="3.配置 Git 密钥并连接至 Github"></a>3.配置 Git 密钥并连接至 Github</h1><p>常用 Git 命令.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config -l      //查看所有配置</span><br><span class="line">git config --system --list //查看系统配置</span><br><span class="line">git config --global --list //查看用户（全局）配置</span><br></pre></td></tr></table></figure><blockquote><p><img src="https://img.090227.xyz/file/f403664b22ad3488a5fb4.jpg" alt="示例3"></p></blockquote><h2 id="3-1-配置用户名和邮箱"><a href="#3-1-配置用户名和邮箱" class="headerlink" title="3.1. 配置用户名和邮箱"></a>3.1. 配置用户名和邮箱</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;你的用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>通过<strong>git config -l</strong> 检查是否配置成功。</p><blockquote><p><img src="https://img.090227.xyz/file/67dca39142021e2214e2b.jpg" alt="示例4"></p><p>![](<a href="https://blog.950320.us.kg/PicGo/.%E6%88%AA%E5%B1%8F2025-02-08">https://blog.950320.us.kg/PicGo/.截屏2025-02-08</a> 21.12.32.png)</p></blockquote><h2 id="3-2-配置公钥连接Github"><a href="#3-2-配置公钥连接Github" class="headerlink" title="3.2. 配置公钥连接Github"></a>3.2. 配置公钥连接Github</h2><ol><li>执行以下命令生成ssh公钥，此公钥用于你的计算机连接Github</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>提示<strong>Enter file in which to save the key</strong>直接一路<strong>回车</strong>即可，新手小白不推荐设置密钥</p><blockquote><p><img src="https://img.090227.xyz/file/45d70737c64caeb4393ad.jpg" alt="示例5"></p><p>mac系统：</p><p>![](<a href="https://blog.950320.us.kg/PicGo/.%E6%88%AA%E5%B1%8F2025-02-08">https://blog.950320.us.kg/PicGo/.截屏2025-02-08</a> 21.12.51.png)</p></blockquote><p>之后打开C盘下用户文件夹下的.ssh的文件夹，会看到以下文件</p><ul><li><strong>id_rsa</strong>私钥</li><li><strong>id_rsa.pub</strong>公钥<blockquote><p><img src="https://img.090227.xyz/file/40bd636f749347666f9f7.jpg" alt="示例6"><br>用记事本打开上述图片中的公钥<strong>id_rsa.pub</strong>，复制里面的内容，然后开始在github中配置ssh密钥。</p></blockquote></li></ul><ol start="2"><li>将 SSH KEY 配置到 GitHub<br>进入github，点击右上角头像 选择<strong>settings</strong>，进入设置页后选择 <strong>SSH and GPG keys</strong>，名字随便起，公钥填到Key那一栏。<blockquote><p><img src="https://img.090227.xyz/file/75fc281237bfc6751a295.jpg" alt="示例7"><br><img src="https://img.090227.xyz/file/993edae3bbca9489dc156.jpg" alt="示例8"><br><img src="https://img.090227.xyz/file/fa8a7628c285e6be5c0a4.png" alt="示例9"><br><img src="https://img.090227.xyz/file/f3fa79cf3d639ef2d5bcb.png" alt="示例10"></p></blockquote></li><li>测试连接，输入以下命令</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>第一次连接会提示<strong>Are you sure you want to continue connecting (yes&#x2F;no&#x2F;[fingerprint])?</strong>，输入<strong>yes</strong>即可<br>出现连接到账户的信息，说明已经大功告成，至此完成了环境准备工作。</p><blockquote><p><img src="https://img.090227.xyz/file/faa0077eeab8c82f1de9e.png" alt="示例11"></p></blockquote><h2 id="3-3-创建GitHub-io仓库"><a href="#3-3-创建GitHub-io仓库" class="headerlink" title="3.3. 创建GitHub.io仓库"></a>3.3. 创建GitHub.io仓库</h2><ol><li>点击右上角的+按钮，选择New repository，创建一个&lt;用户名&gt;.github.io 的仓库。</li><li>仓库名字的格式必须为：&lt;用户名&gt;.github.io (注意：前缀必须为用户名，此为预览博客需要，后期可修改仓库名)</li><li>可见性必须选择 Public 方便第一次部署检查问题，点击 Creat repository 进行创建即可<blockquote><p><img src="https://img.090227.xyz/file/3d9274644460cd1ffeb26.png" alt="示例12"></p></blockquote></li></ol><h1 id="4-初始化-Hexo-博客"><a href="#4-初始化-Hexo-博客" class="headerlink" title="4.初始化 Hexo 博客"></a>4.初始化 Hexo 博客</h1><ol><li>创建一个文件夹来保存博客源码（我这里选的路径为<strong>C:&#x2F;users&#x2F;chenp&#x2F;MY-BLOG</strong>），在文件夹内右键鼠标，选择<strong>Open Git Bash here</strong><blockquote><p><img src="https://img.090227.xyz/file/f78e04406dc803d610538.png" alt="示例13"></p></blockquote></li><li>在<strong>Git BASH</strong>输入如下命令安装 <strong>Hexo</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli &amp;&amp; hexo -v</span><br></pre></td></tr></table></figure><p><img src="https://img.090227.xyz/file/808bff9b7ab5b13fcd200.png" alt="示例14"><br>3. 安装完后输入<strong>hexo -v</strong>验证是否安装成功。<br>  <img src="https://img.090227.xyz/file/17349517f78516f7ac8ff.png" alt="示例15"></p><ol start="4"><li>初始化 Hexo 项目安装相关依赖。</li></ol>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog-demo</span><br><span class="line">cd blog-demo</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><p>  <img src="https://img.090227.xyz/file/1c130d7beed537111d448.png" alt="示例16"></p><ol start="5"><li>初始化项目后，blog-demo有如下结构：<br>  <img src="https://img.090227.xyz/file/74128294708705e22e188.png" alt="示例17"></li></ol><ul><li><strong>node_modules</strong>：依赖包</li><li><strong>scaffolds</strong>：生成文章的一些模板</li><li><strong>source</strong>：用来存放你的文章</li><li><strong>themes</strong>：主题</li><li><strong>.npmignore</strong>：发布时忽略的文件（可忽略）</li><li><strong>_config.landscape.yml</strong>：主题的配置文件</li><li><strong>config.yml</strong>：博客的配置文件</li><li><strong>package.json</strong>：项目名称、描述、版本、运行和开发等信</li></ul><ol><li>输入hexo cl &amp;&amp; hexo s启动项目<br><img src="https://img.090227.xyz/file/e8c930919bb49270bde5a.png" alt="示例18"></li><li>打开浏览器，输入地址：<a href="http://localhost:4000/">http://localhost:4000/</a> ，看到下面的效果，说明你的博客已经构建成功了。<br><img src="https://img.090227.xyz/file/e285037815104f68f4514.jpg" alt="示例19"></li></ol><h1 id="5-将静态博客挂载到-GitHub-Pages"><a href="#5-将静态博客挂载到-GitHub-Pages" class="headerlink" title="5.将静态博客挂载到 GitHub Pages"></a>5.将静态博客挂载到 GitHub Pages</h1><ol><li>安装 hexo-deployer-git</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><ol start="2"><li>修改 <strong>_config.yml</strong> 文件<br>在blog-demo目录下的_config.yml，就是整个Hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的配置描述。<br>修改最后一行的配置，将repository修改为你自己的github项目地址即可，还有分支要改为<strong>main</strong>代表主分支（注意缩进）。</li><li>修改好配置后，运行如下命令，将代码部署到 GitHub（Hexo三连）。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// Git BASH终端</span><br><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy  </span><br><span class="line"></span><br><span class="line">// 或者</span><br><span class="line"></span><br><span class="line">// VSCODE终端</span><br><span class="line">hexo cl; hexo g; hexo d</span><br></pre></td></tr></table></figure><ul><li>hexo clean：删除之前生成的文件，可以用<strong>hexo cl</strong>缩写。</li><li>hexo generate：生成静态文章，可以用<strong>hexo g</strong>缩写</li><li>hexo deploy：部署文章，可以用<strong>hexo d</strong>缩写<br><img src="https://img.090227.xyz/file/18b052b831896bf00cfc4.jpg" alt="示例20"><br>注意！：<em>deploy</em>时可能要你输入 <em>username</em> 和 <em>password</em>。<br>如果出现<strong>Deploy done</strong>，则说明部署成功了。<br><img src="https://img.090227.xyz/file/93a5d61648491a5278556.jpg" alt="示例21"><br>稍等两分钟，打开浏览器访问：https:&#x2F;&#x2F;&lt;用户名&gt;.github.io ，这时候我们就可以看到博客内容了。<br><img src="https://img.090227.xyz/file/1239b1270fcdc8bd896a6.jpg" alt="示例22"></li></ul><h1 id="6-将静态博客挂载到-Cloudflare-Pages"><a href="#6-将静态博客挂载到-Cloudflare-Pages" class="headerlink" title="6.将静态博客挂载到 Cloudflare Pages"></a>6.将静态博客挂载到 Cloudflare Pages</h1><p>打开 <a href="https://dash.cloudflare.com/" title="cloudflare">cloudflare</a> 在 <strong>Workers</strong> 和 <strong>Pages</strong>中选择 <strong>Pages</strong> 的 连接到 <strong>Git</strong><br><img src="https://img.090227.xyz/file/b3eae4e84c4c7c31af665.jpg" alt="示例23"><br><img src="https://img.090227.xyz/file/440581264cb313ed77e75.jpg" alt="实例24"><br>2. 然后登录你Blog仓库对应的GitHub帐号<br><img src="https://img.090227.xyz/file/733c0a673bb66670b7ca1.jpg" alt="示例25"><br><img src="https://img.090227.xyz/file/8fb282e32991167a98f57.jpg" alt="实例26"><br>3. 点击<strong>保存并部署</strong>后等待部署完成即可。<br><img src="https://img.090227.xyz/file/60cca5e2200e260327227.jpg" alt="示例27"><br>4. 提示<strong>成功</strong>！您的项目已部署到以下区域：全球后，浏览器访问：https:&#x2F;&#x2F;&lt;用户名&gt;-github-io.pages.dev ，这时候我们就可以看到博客内容了。<br><img src="https://img.090227.xyz/file/0f2a697243725c6fa2ab8.jpg" alt="实例28"><br>这时你也就可以将你的**&lt;用户名&gt;.github.io<strong>的仓库设置为</strong>Private**私库了<br>5. 如果你有自己的域名，你可以在这里绑定你自己的自定义域，即可<br><img src="https://img.090227.xyz/file/2c9ce4b9b67c09376bb91.jpg" alt="示例29"></p><h1 id="7-如何使用"><a href="#7-如何使用" class="headerlink" title="7.如何使用"></a>7.如何使用</h1><h2 id="7-1新建一篇博文"><a href="#7-1新建一篇博文" class="headerlink" title="7.1新建一篇博文"></a>7.1新建一篇博文</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;新的blog名称&quot;</span><br></pre></td></tr></table></figure><p>然后用文本编辑器去编辑*_posts&#x2F;新的blog名称.md*里的内容即可，注意要使用<strong>Markdown</strong>格式书写。<br>详细使用方法可以查阅 <a href="https://hexo.io/zh-cn/docs/writing">https://hexo.io/zh-cn/docs/writing</a></p><h2 id="编辑完文章保存后可以使用如下命令，生成本地页面-http-localhost-4000-，进行预览"><a href="#编辑完文章保存后可以使用如下命令，生成本地页面-http-localhost-4000-，进行预览" class="headerlink" title="编辑完文章保存后可以使用如下命令，生成本地页面 http://localhost:4000/ ，进行预览"></a>编辑完文章保存后可以使用如下命令，生成本地页面 <a href="http://localhost:4000/">http://localhost:4000/</a> ，进行预览</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// Git BASH终端</span><br><span class="line">hexo cl &amp;&amp; hexo s</span><br><span class="line"></span><br><span class="line">// 或者</span><br><span class="line"></span><br><span class="line">// VSCODE终端</span><br><span class="line">hexo cl; hexo s</span><br></pre></td></tr></table></figure><h2 id="确认无误后使用以下命令，将本地文章推送至GitHub仓库即可"><a href="#确认无误后使用以下命令，将本地文章推送至GitHub仓库即可" class="headerlink" title="确认无误后使用以下命令，将本地文章推送至GitHub仓库即可"></a>确认无误后使用以下命令，将本地文章推送至GitHub仓库即可</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">//</span> <span class="string">Git</span> <span class="string">BASH终端</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">cl</span> <span class="string">&amp;&amp;</span> <span class="string">hexo</span> <span class="string">g</span> <span class="string">&amp;&amp;</span> <span class="string">hexo</span> <span class="string">d</span></span><br><span class="line"></span><br><span class="line"><span class="string">//</span> <span class="string">或者</span></span><br><span class="line"></span><br><span class="line"><span class="string">//</span> <span class="string">VSCODE终端</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">cl;</span> <span class="string">hexo</span> <span class="string">g;</span> <span class="string">hexo</span> <span class="string">d</span></span><br></pre></td></tr></table></figure><h1 id="8-添加评论功能"><a href="#8-添加评论功能" class="headerlink" title="8.添加评论功能"></a>8.添加评论功能</h1><p>​我们现在的博客已经搭建，但是没有评论功能，需要添加评论功能，使用github账号登陆即可评论，如下图，我们可以看到目前是没有评论功能的。</p><p>![](<a href="https://blog.950320.us.kg/PicGo/.%E6%88%AA%E5%B1%8F2025-02-08">https://blog.950320.us.kg/PicGo/.截屏2025-02-08</a> 21.52.55.png)</p><p>下面我们来给博客添加一个评论功能，这里我们使用这个 <a href="https://github.com/apps/utterances">utterances插件</a>，它是一个基于 GitHub Issue 的，开源评论插件。</p><p>![](<a href="https://blog.950320.us.kg/PicGo/.%E6%88%AA%E5%B1%8F2025-02-08">https://blog.950320.us.kg/PicGo/.截屏2025-02-08</a> 21.55.52.png)</p><p>我们点击**<u>Install</u>**它，然后选择对应的仓库给它授权。然后在 GitHub 仓库，点击设置，找到 features 下面这个 Discussion 选项，然后点击勾选上这个选项。</p><p>接着我们需要修改 _config.anzhiyu.yml 配置文件，在文件中填入下面的内容，保存就可以了。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post:</span></span><br><span class="line">  <span class="attr">comments:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">utterances</span></span><br><span class="line"></span><br><span class="line"><span class="attr">utterances:</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">GitHub用户名/GitHub用户名.github.io</span></span><br><span class="line">  <span class="attr">issue_term:</span> <span class="string">title</span></span><br><span class="line">  <span class="attr">label:</span> <span class="string">utterances</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">github-light</span></span><br><span class="line">  <span class="attr">theme_dark:</span> <span class="string">github-dark</span></span><br><span class="line">  <span class="attr">crossorigin:</span> <span class="string">anonymous</span>    </span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/02/02/hello-world/"/>
      <url>/2025/02/02/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
